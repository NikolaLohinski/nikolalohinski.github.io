'use strict'

const {
    parallel,
    series,
    watch
} = require('gulp')
const createTask = require('./gulp.d/lib/create-task')
const exportTasks = require('./gulp.d/lib/export-tasks')

const bundleName = `ui-${process.env['THEME_VERSION'] || 'vX.Y'}`
const buildDir = 'public/bundle'
const previewSrcDir = 'src/sample'
const previewDestDir = 'public'
const srcDir = 'src/ui'
const destDir = `${previewDestDir}/_`
const {
    reload: livereload
} = process.env.LIVERELOAD === 'true' ? require('gulp-connect') : {}
const serverConfig = {
    host: '0.0.0.0',
    port: 5252,
    livereload
}

const task = require('./gulp.d/tasks')
const glob = {
    all: [srcDir, previewSrcDir],
    css: `${srcDir}/css/**/*.css`,
    js: ['gulpfile.js', 'gulp.d/**/*.js', `${srcDir}/{helpers,js}/**/*.js`],
}

const cleanTask = createTask({
    name: 'clean',
    desc: 'Clean files and folders generated by build',
    call: task.remove(['public']),
})

const buildTask = createTask({
    name: 'build',
    desc: 'Build and stage the UI assets for bundling',
    call: task.build(srcDir, destDir, process.argv.slice(2).some((name) => name.startsWith('preview'))),
})

const bundlePackTask = createTask({
    name: 'bundle:pack',
    desc: 'Create a bundle of the staged UI assets for publishing',
    call: task.pack(destDir, buildDir, bundleName),
})

const buildPreviewPagesTask = createTask({
    name: 'preview:build-pages',
    call: task.buildPreviewPages(srcDir, previewSrcDir, previewDestDir, livereload),
})

const previewBuildTask = createTask({
    name: 'preview:build',
    desc: 'Process and stage the UI assets and generate pages for the preview',
    call: parallel(buildTask, buildPreviewPagesTask),
})

const bundleTask = createTask({
    name: 'bundle',
    desc: 'Clean, build, and bundle the UI for publishing',
    call: series(cleanTask, previewBuildTask, bundlePackTask),
})

const previewServeTask = createTask({
    name: 'preview:serve',
    call: task.serve(previewDestDir, serverConfig, () => watch(glob.all, previewBuildTask)),
})

const previewTask = createTask({
    name: 'preview',
    desc: 'Generate a preview site and launch a server to view it',
    call: series(cleanTask, previewBuildTask, previewServeTask),
})

module.exports = exportTasks(
    bundleTask,
    previewTask,
)